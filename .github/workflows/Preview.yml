name: 🌐 Preview 🚀 CI/CD Pipeline

on:
  push:
    branches-ignore: ["main"]
  pull_request:
    branches-ignore: ["main"]

jobs:
  prettier-code:
    name: 🎨 Prettify Code Check
    runs-on: ubuntu-latest

    steps:
      - name: 🛒 Checkout Code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🎨 Run Prettier
        run: npm run prettier:check

  setup-and-build:
    name: 🏗️ Setup and Build
    runs-on: ubuntu-latest
    needs: prettier-code

    steps:
      - name: 🛒 Checkout Code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🏗️ Execute Build
        run: npm run build


  lint-code:
    name: 🧹 Lint Code
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: 🛒 Checkout Code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

  unit-tests:
    name: 🧪 Run Unit Tests
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: 🛒 Checkout Code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🧪 Execute Unit Tests
        run: npm run test:unit

  ui-tests:
    name: 🖼️ Run UI Tests
    runs-on: ubuntu-latest
    needs: setup-and-build

    steps:
      - name: 🛒 Checkout Code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🖼️ Execute UI Tests
        run: npm run test:ui

  e2e-tests:
    name: 🌐 Run E2E Playwright Tests using DB(Dev)
    runs-on: ubuntu-latest
    needs: setup-and-build
    container:
      image: mcr.microsoft.com/playwright:v1.42.1-jammy

    steps:
      - name: 🛒 Checkout Code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🏗️ Execute Build
        run: npm run build

      - name: 🌐 Execute Playwright Tests on Chromium
        run: npx playwright test --project=chromium --reporter=list
        env:
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DEV_DIRECT_URL }}

      - name: 🌐 Execute Playwright Tests on Firefox
        run: npx playwright test --project=firefox --reporter=list
        env:
          HOME: /root
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DEV_DIRECT_URL }}

      - name: 🌐 Execute Playwright Tests on WebKit
        run: npx playwright test --project=webkit --reporter=list
        env:
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DEV_DIRECT_URL }}

  deploy-to-vercel:
    name: 🚀 Deploy to Vercel Preview using DB(Dev)
    runs-on: ubuntu-latest
    needs: [setup-and-build, lint-code, unit-tests, ui-tests, e2e-tests]

    steps:
      - name: 🛒 Checkout Code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🌍 Install Vercel CLI
        run: npm install --global vercel@latest

      - name: ⚙️ Pull Vercel Environment Info
        run: vercel pull --yes --environment=preview --token=${{ secrets.V_TOKEN }}

      - name: 🏗️ Construct Project for Deployment
        run: vercel build --token=${{ secrets.V_TOKEN }}

      - name: 🚀 Deploy Project to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.V_TOKEN }}
