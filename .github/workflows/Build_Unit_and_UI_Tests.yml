# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Run Unit and Ui Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    container:
      image: mcr.microsoft.com/playwright:v1.42.1-jammy

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
  

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build
    
    - name: Start Test Server
      run: npm run start &
      env:
        DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
        DIRECT_URL: ${{ secrets.DEV_DIRECT_URL }}
    
    - name: Wait for Test Server to be ready
      run: sleep 10 # Adjust this value based on the actual time your server needs to be ready

    - name: Run Playwright tests Chromium
      run: npx playwright test --project=chromium
      env:
        DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
        DIRECT_URL: ${{ secrets.DEV_DIRECT_URL }}
      
    - name: Run Playwright tests Firefox
      run: npx playwright test --project=firefox
      env:
        DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
        DIRECT_URL: ${{ secrets.DEV_DIRECT_URL }}
        NODE_ENV: test
      
    - name: Run Playwright tests WebKit
      run: npx playwright test --project=webkit
      env:
        DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
        DIRECT_URL: ${{ secrets.DEV_DIRECT_URL }}
        NODE_ENV: test
    
    - name: Test UI tests using react-testing-library
      run: npm test
      env:
        CI: true
    
    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Vercel environment information
      run: vercel pull --yes --environment=production --token=${{ secrets.V_TOKEN }}

    - name: Construct project
      run: vercel build --prod --token=${{ secrets.V_TOKEN }}

    - name: Deploy project to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.V_TOKEN }}

      # test
