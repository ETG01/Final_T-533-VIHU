name: Tests and Vercel Production Deployment

on:
    push:
      branches: ["main"]
    pull_request:
      branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    container:
      image: mcr.microsoft.com/playwright:v1.42.1-jammy

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Eslint check
        run: npm run lint

      - name: Unit Test
        run: npm run test:unit

      - name: Ui Test
        run: npm run test:ui

      - name: Run Playwright tests Chromium
        run: npx playwright test --project=chromium
        env:
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DEV_DIRECT_URL }}

      - name: Run Playwright tests Firefox
        run: npx playwright test --project=firefox
        env:
          HOME: /root
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DEV_DIRECT_URL }}

      - name: Run Playwright tests WebKit
        run: npx playwright test --project=webkit
        env:
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DEV_DIRECT_URL }}
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.V_TOKEN }}

      - name: Construct project
        run: vercel build --prod --token=${{ secrets.V_TOKEN }}

      - name: Deploy project to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.V_TOKEN }}
